//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Rimss.Web.Models
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class RimssDbEntities : DbContext
    {
        public RimssDbEntities()
            : base("name=RimssDbEntities")
        {
            this.Configuration.LazyLoadingEnabled = false;
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<Application> Applications { get; set; }
        public virtual DbSet<ConversionJob> ConversionJobs { get; set; }
        public virtual DbSet<ConversionLog> ConversionLogs { get; set; }
        public virtual DbSet<ConvertedImage> ConvertedImages { get; set; }
        public virtual DbSet<Folder> Folders { get; set; }
        public virtual DbSet<IdentityCache> IdentityCaches { get; set; }
        public virtual DbSet<SourceImage> SourceImages { get; set; }
    
        public virtual int EnsureCurrentUserIdentityCache(ObjectParameter id)
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("EnsureCurrentUserIdentityCache", id);
        }
    
        public virtual ObjectResult<GetCurrentUserIdentityCache_Result> GetCurrentUserIdentityCache()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetCurrentUserIdentityCache_Result>("GetCurrentUserIdentityCache");
        }
    
        public virtual ObjectResult<proc_FinishConversionJob_Result> proc_FinishConversionJob(Nullable<System.Guid> id, Nullable<int> statusId, string statusMessage, string detailMessage)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("Id", id) :
                new ObjectParameter("Id", typeof(System.Guid));
    
            var statusIdParameter = statusId.HasValue ?
                new ObjectParameter("StatusId", statusId) :
                new ObjectParameter("StatusId", typeof(int));
    
            var statusMessageParameter = statusMessage != null ?
                new ObjectParameter("StatusMessage", statusMessage) :
                new ObjectParameter("StatusMessage", typeof(string));
    
            var detailMessageParameter = detailMessage != null ?
                new ObjectParameter("DetailMessage", detailMessage) :
                new ObjectParameter("DetailMessage", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<proc_FinishConversionJob_Result>("proc_FinishConversionJob", idParameter, statusIdParameter, statusMessageParameter, detailMessageParameter);
        }
    
        public virtual int proc_StartConversionJob(Nullable<System.Guid> sourceImageId, Nullable<int> width, Nullable<int> height, Nullable<int> format, Nullable<System.Guid> startedById, Nullable<int> initialStatusId, string statusMessage)
        {
            var sourceImageIdParameter = sourceImageId.HasValue ?
                new ObjectParameter("SourceImageId", sourceImageId) :
                new ObjectParameter("SourceImageId", typeof(System.Guid));
    
            var widthParameter = width.HasValue ?
                new ObjectParameter("Width", width) :
                new ObjectParameter("Width", typeof(int));
    
            var heightParameter = height.HasValue ?
                new ObjectParameter("Height", height) :
                new ObjectParameter("Height", typeof(int));
    
            var formatParameter = format.HasValue ?
                new ObjectParameter("Format", format) :
                new ObjectParameter("Format", typeof(int));
    
            var startedByIdParameter = startedById.HasValue ?
                new ObjectParameter("StartedById", startedById) :
                new ObjectParameter("StartedById", typeof(System.Guid));
    
            var initialStatusIdParameter = initialStatusId.HasValue ?
                new ObjectParameter("InitialStatusId", initialStatusId) :
                new ObjectParameter("InitialStatusId", typeof(int));
    
            var statusMessageParameter = statusMessage != null ?
                new ObjectParameter("StatusMessage", statusMessage) :
                new ObjectParameter("StatusMessage", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("proc_StartConversionJob", sourceImageIdParameter, widthParameter, heightParameter, formatParameter, startedByIdParameter, initialStatusIdParameter, statusMessageParameter);
        }
    }
}
